---

- job:
    name: launcher-tests
    project-type: pipeline
    sandbox: true
    parameters:
      - string:
          name: REPOSITORY
          default: 'file:///Users/tonydavidson/integreatly-qe/'
          description: 'QE Git repository URL.'
      - string:
          name: BRANCH
          default: 'master'
          description: 'Branch of the repository'
      - string:
          name: CLUSTER_URL
          description: 'URL of cluster on which the tests will be executed.'
      - string: 
          name: ADMIN_USERNAME
          default: 'admin@example.com'
          description: 'User name to login to Integreatly cluster.'
      - string: 
          name: ADMIN_PASSWORD
          default: 'Password1'
          description: 'Password to login to Integreatly cluster.'
      - string:
          name: EVALS_USERNAME
          default: 'evals11@example.com'
          description: 'Evals user name'
      - string:
          name: GH_USER
          description: 'Github user name'
      - string:
          name: GH_PERSONAL_TOKEN
          description: 'Github token for the user provided'
      - bool:
          name: CLEAN_RESOURCES
          default: false
          description: 'depending on whether the resources should be cleaned after the successful execution'
      - string:
          name: NAMESPACE_PREFIX
          description: "Value used to prefix the names of the namespaces created during Integr8ly installation"
      - string:
          name: TIMEOUT_THRESHOLD
          default: '1'
          description: 'optionally increase timeout values. If you provide value 2 it means it will be sleeping/waiting two times longer'
      - string:
          name: POLARION_TEMPLATE_ID
          description: 'Optional: the Polarion test run template id to use to report the test result to Polarion'
      - bool:
          name: FINAL_CHECK_ONLY
          default: false
          description: 'defaults to false. When set to true - only final checks of the individual wt2 related tests are checked'
    dsl: |
        timeout(35) { ansiColor('xterm') { timestamps {
            node('tester'){

                Boolean publishTestResults = true

                stage('Clone QE repository') {
                    dir('.') {
                        git branch: "${BRANCH}", url: "${REPOSITORY}"
                    }
                }
                stage('Run the Launcher tests'){
                    dir('test-suites/backend-testsuite') {
                        sh '''
                            npm install
                            ./node_modules/gulp/bin/gulp.js create-booster 2>&1 | tee output.txt
                        '''  
                        String output = readFile("output.txt");
                        
                        if(!output.contains('Launcher booster creation tests')) {
                            currentBuild.result = 'FAILURE'
                            publishTestResults = false
                        } else if(output.contains('There were test failures')) {
                            currentBuild.result = 'UNSTABLE'
                        }
                    }
                }
                stage('Publish test results') {
                    if(publishTestResults) {
                        dir('test-suites/backend-testsuite/reports/') {
                            archiveArtifacts 'booster-creation.xml'
                            junit allowEmptyResults:true, testResults: 'booster-creation.xml'

                            if(params.POLARION_TEMPLATE_ID) {
                                build(job: 'polarion-reporter', wait: false, parameters: [
                                    string(name: 'ARTIFACT_URL', value: "${BUILD_URL}/artifact/booster-creation.xml"),
                                    string(name: 'TESTRUN_TITLE', value: "W2 Launcher Test"),
                                    string(name: 'TESTRUN_TEMPLATE_ID', value: "${POLARION_TEMPLATE_ID}"),
                                ])
                            }
                        }
                    } else {
                        println 'Publishing the results skipped. Probably due to an error.'
                    }
                }
            }
        }}}
