#!groovy
timeout(240) { ansiColor('xterm') { timestamps {
    node('tester') {
        stage ('Trigger OSD OCP4 Pipeline') {
            String clusterName = ""
            if ( "${CLUSTER_NAME}".toString().contains("master") ) {
                clusterName = "master-${BUILD_NUMBER}"
            } else if ( "${CLUSTER_NAME}".toString().contains("aws") ) {
                clusterName = "aws-${BUILD_NUMBER}"
            } else {
                clusterName = "olm-${BUILD_NUMBER}"
            }
            buildStatus = build(job: 'osd-ocp4-testing-executor', propagate: false, parameters: [
                string(name: 'CLUSTER_NAME', value: clusterName),
                string(name: 'RECIPIENTS', value: "${RECIPIENTS}"),
                string(name: 'INTEGREATLY_OPERATOR_BRANCH', value: "${INTEGREATLY_OPERATOR_BRANCH}"),
                booleanParam(name: 'OLM_INSTALLATION', value:  Boolean.valueOf(OLM_INSTALLATION)),
                booleanParam(name: 'BYOC', value:  Boolean.valueOf(BYOC)),
                string(name: 'AWS_CREDENTIALS', value: "${AWS_CREDENTIALS}"),
                string(name: 'AWS_ACCOUNT_ID', value: "${AWS_ACCOUNT_ID}"),
                string(name: 'TO_DO', value: "${TO_DO}")
            ]).result

            if (buildStatus == 'UNSTABLE') {
                currentBuild.result = 'UNSTABLE'
            } else if (buildStatus == 'SUCCESS') {
                currentBuild.result = 'SUCCESS'
            } else {
                currentBuild.result = 'FAILURE'
            }
        } // stage
    }// node
}}} // timeout, ansiColor, timestamps